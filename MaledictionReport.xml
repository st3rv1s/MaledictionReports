<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- MuClient version 5.07-pre -->
<!-- Plugin "MaledictionAnnounce" generated by Plugin Wizard -->

<muclient>
  <plugin
   name="MaledictionReport"
   author="Kanaye"
   id="2558d613691a941bb5f1398b"
   language="Lua"
   purpose="A plugin to help you notify others of landed maledictions"
   date_written="2024-7-24 17:59:57"
   requires="5.07"
   version="1.21"
  >
  
<description trim="y">
<![CDATA[

+-------------------------[Malediction Report!]-------------------------+
|                                                                       |
|          Type 'malrep' to toggle between ON and OFF state.            |
|                                                                       |
+-----------------------------------------------------------------------+

]]>
</description> 
  
  </plugin>
  
<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Aliases  -->
  <aliases>
  
	<!-- Alias for turning on/off -->
    <alias
    match="^malrep$"
    enabled="y"
    regexp="y"
    send_to="12"
    sequence="100"
    script="debuff_toggle"
    >
    </alias>
	
	<!-- Alias for changing channel -->
    <alias
    match="^malrep\schannel\s(.*?)$"
    name="SetChannel"
    enabled="y"
    omit_from_output="n"
    regexp="y"
    sequence="100"
    script="SetChannel"
    />
	
	<!-- Alias for checking update -->
    <alias
    match="^malrep\supdate\scheck$"
    enabled="y"
    regexp="y"
    sequence="99"
    script="update_check_alias"
    />
    
    <!-- Alias for installing update -->
    <alias
    match="^malrep\supdate\sinstall$"
    enabled="y"
    regexp="y"
    sequence="99"
    script="update_install_alias"
    />
  
  </aliases>
  
  <!--  Script -->
  <script>
   <![CDATA[
   
 ----------------------- Plugin Update Code -----------------------
 -- Code taken from Durel's dinv plugin, originally via Crowley
require("wait")
require("async")
json = require("json")

 plugin_url = "https://raw.githubusercontent.com/st3rv1s/MaledictionReports/refs/heads/main/MaledictionReport.xml"
 SetVariable("DownloadURL", plugin_url)
 plugin_protocol = "HTTPS"
 plugin_prefix = "[MaledictionReport]"
 
 function update_check_alias()
     update_plugin("check")
     ColourNote("white", "", plugin_prefix .. " Checking for updated version...")
 end
 
 function update_install_alias()
     update_plugin("install")
     ColourNote("white", "", plugin_prefix .. " Checking for and installing updated version...")
 end
 
 function reload_plugin()
     local scriptPrefix = GetAlphaOption("script_prefix")
     local retval
 
     -- If the user has not already specified the script prefix for this version of mush, pick a
     -- reasonable default value
     if (scriptPrefix == "") then
         scriptPrefix = "\\\\\\"
         SetAlphaOption("script_prefix", scriptPrefix)
     end
 
     -- Tell mush to reload the plugin in one second.  We can't do it directly here because a
     -- plugin can't unload itself.  Even if it could, how could it tell mush to load it again
     -- if it weren't installed? 
     retval = Execute(scriptPrefix.."DoAfterSpecial(0.1, \"ReloadPlugin('"..GetPluginID().."')\", sendto.script)")
 end
 
 function update_plugin(mode)
     update_mode = mode
 
     wait.make(get_plugin_file)
 end
 
 function get_plugin_file()
     local urlThread = async.request(plugin_url, plugin_protocol)
 
     if not urlThread then
         note_error("Couldn't create async url request.")
         return
     end
 
     local timeout = 10
     local totTime = 0
     while (urlThread:alive() and totTime < timeout) do
         wait.time(0.1)
         totTime = totTime + 0.1
     end
 
     local remoteRet, pluginData, status, headers, fullStatus = urlThread:join()
 
     if not status then
         ColourNote("red", "", plugin_prefix .. " Couldn't download plugin file. No status code.")
         
         return
     end
 
     if (status ~= 200) then
         ColourNote("red", "", plugin_prefix .. " Plugin file request status code: " .. status .. ": " .. fullStatus)
         return
     end
     
     local currentVersion = GetPluginInfo(GetPluginID(), 19) or 0
     local currentVerStr  = tostring(currentVersion)
     local remoteVerStr   = string.match(pluginData, '%s%s+version="([0-9%.]+)"')
     local remoteVersion  = tonumber(remoteVerStr or "") or 0
 
     if remoteVersion == currentVersion then
         ColourNote("white", "", plugin_prefix .. " You are running the most recent version (v" .. currentVerStr .. ")")
     elseif (remoteVersion < currentVersion) then
         ColourNote("white", "", plugin_prefix .. " You have a newer version than is publicly available. (v" .. currentVerStr .. ")")
     elseif (update_mode == "check") then
         ColourNote("white", "", plugin_prefix .. " You are running v" .. currentVerStr .. ", but there's a newer version v" .. remoteVerStr)
     elseif (update_mode == "install") then
         ColourNote("white", "", plugin_prefix .. " Updating plugin from version " .. currentVerStr .. " to version " .. remoteVerStr) 
 
         local pluginFile = GetPluginInfo(GetPluginID(), 6)
         local file = io.open(pluginFile, "wb")
         file:write(pluginData)
         file:close()
         reload_plugin()
     else
         ColourNote("red", "", plugin_prefix .. " Invalid update mode: " .. update_mode)
     end
 end
 ----------------------- End Plugin Update Code -----------------------

require "gmcphelper"

function OnHelp ()
  world.Note (world.GetPluginInfo (world.GetPluginID (), 3))
end

local _Debuff_Master = "ON"
local _Channel = "say"
local _CurrentKoboldTarget = nil
local _CurrentKoboldSpell = nil

function debuff_toggle()
 	if _Debuff_Master == "ON"
 		then
 			_Debuff_Master = "OFF"
 			EnableGroup("debuffs", false)
			ColourNote ("darkred", "dimgrey", "Malediction reports are DISABLED!")
	elseif _Debuff_Master == "OFF"
		then
			_Debuff_Master = "ON"
			EnableGroup("debuffs", true)
			ColourNote ("limegreen", "dimgrey", "Malediction reports are ENABLED!")
	end
end

function SetChannel(name, line, wildcards)
    _Channel = wildcards[1]
    SetVariable("Save_Channel", _Channel)
    cnote("@WMALREP now broadcasts to @C" .. _Channel .. "@w")
end

function Announce(name, line, wildcards)
    local target = wildcards[1] or "unknown"
    local spell = name:upper()  -- Use the trigger name as the spell/malediction
    -- Broadcast with color codes
    SendNoEcho(string.format("%s @W%s'D! @C(@D%s@C)@w", _Channel, spell, target))
end

function KoboldFirstLine(name, line, wildcards)
    _CurrentKoboldTarget = wildcards[1]
    if string.find(line, "huge rotting Kobold", 1, true) then
        _CurrentKoboldSpell = "KSPRAY"
    else
        _CurrentKoboldSpell = "KOBOLD"
    end
end

function KoboldSecondLine(name, line, wildcards)
    if _CurrentKoboldTarget and _CurrentKoboldSpell then
		SendNoEcho(string.format("%s @W%s'D! @C(@D%s@C)@w", _Channel, _CurrentKoboldSpell:upper(), _CurrentKoboldTarget))
    end
    _CurrentKoboldTarget = nil
    _CurrentKoboldSpell = nil
end

function OnPluginInstall()
	OnHelp()
	_Channel = GetVariable("Save_Channel") or "say"
end

function OnPluginSaveState()
	SetVariable("Save_Channel", _Channel)
end

   ]]>
  </script>

<!-- Include standard constants -->
<include name="constants.lua"/>

   <!-- Triggers -->
  <triggers>
  
    <!-- Trigger for SANCTUARY -->
    <trigger
    name="Sanc"
    match="^The white aura around (.+)\'s body vanishes\.$"
    enabled="y"
	group="debuffs"
    regexp="y"
    send_to="12"
    ignore_case="y"
    sequence="100"
	script="Announce"
    />
	
    <!-- Trigger for REVERSE ALIGN -->
    <trigger
    name="RevEvil"
    match="^You banish (.+?) to the forces of (shadow|light)\.$"
    enabled="y"
	group="debuffs"
    regexp="y"
    send_to="12"
    ignore_case="y"
    sequence="100"
	script="Announce"
    />
	
    <!-- Trigger for WEAKEN -->
    <trigger
    name="Weaken"
    match="^(.*?) looks tired and weak\.$"
    enabled="y"
	group="debuffs"
    regexp="y"
    send_to="12"
    ignore_case="y"
    sequence="100"
	script="Announce"
    />

	<!-- Trigger for RAW FLESH -->
    <trigger
    name="RawFlesh"
    match="^(.*?)'s flesh is ripped from (.*?)'s body\.$"
    enabled="y"
	group="debuffs"
    regexp="y"
    send_to="12"
    ignore_case="y"
    sequence="100"
	script="Announce"
    />

	<!-- Trigger for SOFTEN -->
    <trigger
    name="Soften"
    match="^(.*?)\'s armor softens\.$"
    enabled="y"
	group="debuffs"
    regexp="y"
    send_to="12"
    ignore_case="y"
    sequence="100"
	script="Announce"	
    />
	
	<!-- Trigger for RUNE of IX -->
    <trigger
    name="Rune"
    match="^You mark (.+) with a Rune of IX\!"
    enabled="y"
	group="debuffs"
    regexp="y"
    send_to="12"
    ignore_case="y"
    sequence="100"
	script="Announce"
    />
	
	<!-- Trigger for RAVEN SPRAY -->
    <trigger
    name="Raven"
    match="^Your acidic venom burns away (.+)\'s armor\.$"
    enabled="y"
	group="debuffs"
    regexp="y"
    send_to="12"
    ignore_case="y"
    sequence="100"
	script="Announce"
    />
	
	<!-- Trigger for MARBU -->
    <trigger
    name="Marbu"
    match="^(.+) falls to (.+?) knees blinded\."
    enabled="y"
	group="debuffs"
    regexp="y"
    send_to="12"
    ignore_case="y"
    sequence="100"
	script="Announce"
    />
	
    <trigger
    name="KsprayFirstLine"
    match="^You spray (.+) with a huge rotting Kobold gland\.$"
    enabled="y"
    regexp="y"
    ignore_case="y"
    script="KoboldFirstLine"
	/>
    
    <trigger
    name="KoboldFirstLine"
    match="^You spray (.+) with a rotting kobold gland\.$"
    enabled="y"
    regexp="y"
    ignore_case="y"
    script="KoboldFirstLine"
	/>
    
    <trigger
    name="KoboldSecondLine"
    match="^(.+) turns pale and appears weakened\.$"
    enabled="y"
    regexp="y"
    ignore_case="y"
    script="KoboldSecondLine"
	/>
	
	<!-- Trigger for HYDRA -->
    <trigger
    name="Hydra"
    match="^(.+) appears to falter\. Your victim is in serious trouble\!$"
    enabled="y"
	group="debuffs"
    regexp="y"
    send_to="12"
    ignore_case="y"
    sequence="100"
	script="Announce"
    />
	
	<!-- Trigger for GREEN DEATH -->
    <trigger
    name="GreenDeath"
    match="^(.+) appears much weaker and extremely vulnerable\."
    enabled="y"
	group="debuffs"
    regexp="y"
    send_to="12"
    ignore_case="y"
    sequence="100"
	script="Announce"
    />
	
	<!-- Trigger for GREEN DEATH -->
    <trigger
    name="Ego"
    match="^You ridicule (.*?) about (.*?) childhood\.$"
    enabled="y"
	group="debuffs"
    regexp="y"
    send_to="12"
    ignore_case="y"
    sequence="100"
	script="Announce"
    />
	
	<!-- Trigger for DISEASE -->
    <trigger
    name="Disease"
    match="^(.+) looks unwell\."
    enabled="y"
	group="debuffs"
    regexp="y"
    send_to="12"
    ignore_case="y"
    sequence="100"
	script="Announce"
    />
	
	<!-- Trigger for CURSE -->
    <trigger
    name="Curse"
    match="^(.*?) looks (.*?) uncomfortable\.$"
    enabled="y"
	group="debuffs"
    regexp="y"
    send_to="12"
    ignore_case="y"
    sequence="100"
	script="Announce"
    />

   <!-- Trigger for THIEF -->
	
	<!-- Trigger for NECRO -->
    <trigger
    name="Necro"
    match="^You reach out and touch (.+), injecting (.+) with deadly necrotic poison\.$"
    enabled="y"
	group="debuffs"
    regexp="y"
    send_to="12"
    ignore_case="y"
    sequence="100"
	script="Announce"
    />
	
    <trigger
    name="Balor"
    match="^You sense that your poison has greatly reduced (.+?)'?s? health\.$"
    enabled="y"
	group="debuffs"
    regexp="y"
    send_to="12"
    ignore_case="y"
    sequence="100"
	script="Announce"
    />
	
	<trigger
    name="Assassinate"
    match="^You assassinate (.+?) with cold efficiency\.$"
    enabled="y"
    regexp="y"
    send_to="12"
    ignore_case="y"
    sequence="100"
	script="Announce"
    />
	
	<!-- Trigger for FLIES -->
    <trigger
    name="Flies"
    match="^You unleash a swarm of flies upon (.+?)\!$"
    enabled="y"
    regexp="y"
    send_to="12"
    ignore_case="y"
    sequence="100"
	script="Announce"
    />
	
  </triggers>

</muclient>
